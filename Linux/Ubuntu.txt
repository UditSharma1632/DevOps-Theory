
			wsl --list --online  							-> find out what wsl your system supports

		
#######################################################		Basic Commands		###################################################
1.		/home 												- where all users will be
2.		/bin  												- where all commands or executables will be residing like cat , ls
3.		whoami												- user name
4.		sudo -i												- root user
5.		file												- find out type of file
6.		ls -lt												- show latest file with timestamp
7.		ctrl + r 											- reverse search i.e. find out what command you executed like all ssh commands I used
8. 		man command_name									- manual of a command
9.		whatis command_name									- tells about command
10.		sudo apt-get upgrade								- Actually upgrade
11.		ls -l												- shows results of ls command in long list



#######################################################		File copy, move and delete	###################################

1.		mkdir												- create directory
2.		mkdir -p											- create dir structure
3.		touch												- create empty file or update timestamp
4.		cp file_name source_dir dest_dir					- copy files
5.		cp -r sr dest 										- copy dir to dir
6.		mv * dir											- move everything with extension to another dir
7.		mv file_name ../									- move a file to previous dir
8.		rm -r dir_name										- remove a dir which is not empty
9.		rm -rv dir_name										- remove a dir which is not empty while showing what it removed
10.		cd - vs cd .. 										- previous dir vs parent dir



#######################################################		Standard Stream and File Manipulation	#################################

1.		ls > output.txt										- It will save the output of ls command in output.txt in current dir
2.		ls >> output.txt									- Also append the result of above command
3.		lg 2> /dev/null									    - executing wrong command and sending out to null as everything into /dev/null will be null
4.		less /var/log/syslog								- opens file in separate window and press q to quit
5.      ls -la /etc | less 									- opens output of this command in separate window
6.      ls /usr/bin | less 									- Open the commands which are stored in here in separate window
7.      head -n 15 file_name 								- First 10 lines of any file, by default it will show only 10
8.      tail -n 15 file_name 								- Last 10 lines of any file, by default it will show only 10
9.      sort -r file_name									- sort a file in reverse order, remove r to sort aplhabatically



#######################################################		User Management & Permissions	###########################################

1.		echo ~												- Displays current user's home dir
2.		sudo su 											- It will make a user, superuser/root  -> Not recommended
3.		cat /etc/sudoers									- List the people who can access sudo command
4.		cat /etc/passwd										- This wll show data of all users in the system
5.		cat /etc/shadow										- Here root user password is stored in encypted form

				
				
							Understanding 			cat /etc/passwd						root:x:0:0:root:/root:/bin/bash
																						 1   2 3 4   5    6     7
							1. Username
							2. Password   										if pswd is x it means it is stored in /etc/shadow and it might be encrypted 
							3. userID
							4. groupID
							5. userInfo
							6. user's home directory
							7. shell
							
							
							Understanding			cat /etc/shadow						root:*:19472:0:99999:7:::
																						1    2  3    4  5    6 7 8 9
							1. username
							2. encrypted passwd
							3. date of last passwd changed since 1st Jan 1970
							4. min passwd age
							5. max passwd age
							6. warning period to change your period
							7. Password expiry period
							8. Account expiry period
							9. reserved field
							
							cat /etc/passwd | grep -vE '(/bin/false|/sbin/nologin|/bin/sync)' | cut -d: -f1   - list all users
							

6.		cat /etc/group										- File for Groups information
7.		sudo useradd user_name								- Adds a user
8.		sudo userdel user_name								- deletes a user
9.		sudo passwd											- update the password of a user
10.		sudo hostname new_name								- update your hostname
	
				Understanding		drwxr-xr-x
									0123456789
				1st - directory				sometime there is l, which is link and - represnts file
				2nd - rwx  					user permissions
				3rd - r-x					group permission
				4th - r-x					other
				
				r -> 4,		w  -> 2,  x  ->1
				
11.		chmod o+w file_name									- giving write permission to other user , user - to remove permission
12.		chmod ugo+rwx file_name								- giving every permission to everyone
13. 	chmod +713											- adding permission rwx for user, --x for group, -wx for others
13. 	chmod -023 file_name								- updating permissions -> removing nothing from user, w permission from group, wx from others
14.		sudo chown user_name file_name						- Change owner of a file
15.		sudo chgrp group_name file_name						- Change group of a file
16.		umask 033											- it will change default permissions
17.		setuid/setgid										- set user/group id







################################################################ Processes in Linux ##############################################################

1.		ps													- list the running processes, generally ran by current user
2.		top													- real time data
3.		ps aux												- list the running processes -> a : all the process by every user
																							u : detailed
																							x : list all the process which might not have terminal with them
4.		nice/renice											- change the nice value of a process
5.		ls /proc											- list the details of process
6.		python3 file_name &									- run a process in background, here this file is a python file


													PID TTY          TIME CMD					
													19 pts/1    00:00:00 bash
													
													PID 	- process id
													TTY 	- Controlling time
													Time 	- CPU usage time
													CMD 	- command 
															
											USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
											root         1  0.0  0.0   4620  3744 pts/0    Ss+  Jul01   0:00 /bin/bash
											
											User 	- owner of process
											PID		- process id
											CPU     - how much time cpu is giving to this process
											MEM		- percentage of memory used
											VSZ		- amount of memeory, process had been allocated when it was initialized first(Max mem available)
											RSS		- amount of memeory, process is using
											TTY		- ? means no terminal associoated
											STAT	- status
											START	- when user started this process
											Time 	- CPU usage time
											CMD 	- command 
											
							
#######################################################  Linux filesystem  ###################################################################

1.		df -T												 - list filesystem
2.		sudo parted -l 										 - info about partitions
3.		cat /etc/fstab										 - mounted file system information
4.		df -h 												 - shows utilization of currently mopunted system (h is human readable)
5.		du -h												 - disk utilization of everything(perform in current directory, please)
6.		df -i 												 - shows no of inodes avaiable
7.		ls -li 												 - regular ls -l where we want to see inode as well using i here
8.		stat dir_name 										 - detailed info about a directory
9.		ln -s file_name link_name							 - create a soft link(-s) of a file
10.		ln file_name link_name							 	 - create a hard link of a file and remember 2nd column in ls -l represents number of hard links


				Desktop File systems
					1. ext4
					2. Btrfs - Butter/better FS
					3. XFS
					4. NTFS & FAT - windows
					5. HFST - Mac
					
				Partitons
					There are 2 main partition schemes
						1. MBR - Master boot record (Max 4 primary partition)
						2. GPT - GUID Partiton table (Globally unique id)
						
				File System Structure
					1. Boot block
					2. Super block
					3. Inode Table
					4. Data Blocks


				Inode - Index node , we can say inode number decides how many directories we can have in a file system
					

	














#######################################################		Search, Find 				###########################################


1.		grep -i your_word filepath 							- search for a word in a file and ignorecase
2.		grep -i your_word filepath *						- search for a word in current dir
3.		grep -vi your_word filepath * 						- show everything else but your_word
4.		find / -type d -name dir_name						- find where a folder is 






































ln -s												- create link among files
unlink												- unlink the link b/w file

cut -d: -f1 /etc/passwd								- show first column of a segregatted file, here d is delimitere and f in field number
awk -F':' '{print $1}' /etc/passwd					- search with awk
%s/current/new										- find and replace only first text in a line in vim
%s/current/new/g									- find and replace globally in a line in vim
sed -i 's/current/new/g' mydevops11.txt *			- same
command > destination								- save result ro file instead of displaying
dev/null											- anything thrown here will be null
su - username										- change to this user
lsof -u username									- find out what files user opened

              











vim editor: 
		:se nu - it will set numbers
		gg     - move to first line
		G      - move to last line
		yy	   - copy some line
		p	   - paste the line
	   4yy     - copy 4 lines
	    u      - undo
		dd     - delete
		5dd    - delete 5 lines
		yyp    - copy paste
		ddp    - cut paste
        /      - search then type n to go to next occurance



apt-get update   - update ubuntu